{"version":3,"sources":["pages/Login/camiao.svg","reportWebVitals.js","imagens/home.png","imagens/armazem.png","pages/Armazem/CriarArmazem/criarArmazem.js","pages/Entrega/CriarEntrega/criarEntrega.js","pages/Entrega/ListarEntrega/listarEntrega.js","pages/Camiao/CriarCamiao/criarCamiao.js","pages/Login/login.js","pages/Percurso/CriarPercurso/criarPercurso.js","pages/Percurso/ListarPercurso/listarPercurso.js","pages/Camiao/ListarCamiao/listarCamiao.js","pages/Armazem/ListarArmazem/listarArmazem.js","pages/Armazem/menuPrincipal.js","pages/Menu/GestorLogistica/menuGestorLogistica.js","index.js"],"names":["module","exports","__webpack_require__","p","reportWebVitals","onPerfEntry","Function","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","home","armazem","CriarArmazem","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onCreateArmazem","armazemInfo","JSON","stringify","id","refs","armazemID","value","designcacao","designacao","morada","rua","numeroPorta","numPorta","codigoPostal","codPostal","localidade","pais","coordenadas","latitude","longitude","altitude","fetch","method","headers","Content-type","body","redirect","response","text","result","console","log","catch","window","alert","state","message","inherits","createClass","key","react_default","a","createElement","className","type","ref","maxLength","required","min","pattern","step","max","onClick","dist","to","src","Home","height","width","Warehouse","React","Component","CriarEntrega","onCreateEntrega","Headers","append","entregaInfo","IdArmazem","DataEntrega","Peso","TempoCarregamento","TempoDescarregamento","error","_regeneratorRuntime","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","__await","unwrapped","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","ListarEntrega","_useState","useState","_useState2","slicedToArray","idArmazem","setIdArmazem","_useState3","_useState4","dataInicial","setDataInicial","_useState5","_useState6","dataFinal","setDataFinal","_useState7","_useState8","opcao","setOpcao","_listar","asyncToGenerator","_callee","path","requestOptions","entregas","output","row","myMap","niveis","_row","dataEntrega","peso","tempoCarregamento","tempoDescarregamento","_context","json","document","getElementById","rows","deleteRow","inserirCell","insertRow","Map","entries","size","get","apply","arguments","atributo","cell","insertCell","innerHTML","onChange","target","readOnly","opcaoSelecionada","inputIdArmazem","inputDataInicial","inputDataFinal","setAttribute","removeAttribute","CriarCamiao","onCreateCamiao","camiaoInfo","nomeCamiao","cargaTotalBaterias","tara","maximoCarga","autonomia","matriculaCamiao","fazerLogin","class","Camiao","alt","placeholder","criarPercurso_regeneratorRuntime","CriarPercurso","armazemPartida","setArmazemPartida","armazemChegada","setArmazemChegada","distancia","setDistancia","duracao","setDuracao","_useState9","_useState10","energiaGasta","setEnergiaGasta","_useState11","_useState12","tempoExtra","setTempoExtra","_useState13","_useState14","formErrors","setFormErrors","_pedidoAPILogistica","camposObrigatorios","valoresNumericos","errors","dadosValidos","pedidoAPILogistica","listarPercurso_regeneratorRuntime","ListarPercurso","percursos","_armazemPartida","_armazemChegada","inputArmPartida","inputArmChegada","listarCamiao_regeneratorRuntime","ListarCamiao","_listarCamiao","camioes","tr","appendChild","listarArmazem_regeneratorRuntime","ListarArmazem","idArmazemInput","setArmazemID","designacaoArmazemInput","setArmazemDesignacao","_listarArmazem","armazens","status","inputIDArmazem","inputDesignacaoArmazem","MenuPrincipal","MenuGestorLogistica","ReactDOM","createRoot","render","StrictMode","react_router_dist","element","criarEntrega_CriarEntrega","criarArmazem_CriarArmazem","CriarPercurso_criarPercurso","criarCamiao_CriarCamiao","ListarPercurso_listarPercurso","ListarEntrega_listarEntrega","Camiao_ListarCamiao_listarCamiao","Armazem_ListarArmazem_listarArmazem","menuPrincipal_MenuPrincipal","menuGestorLogistica_MenuGestorLogistica"],"mappings":"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","file":"static/js/main.b2bb7dc5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/camiao.1fd2780e.svg\";","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export default __webpack_public_path__ + \"static/media/home.11113ea3.png\";","export default __webpack_public_path__ + \"static/media/armazem.7a1631e0.png\";","import './criarArmazem.css';\r\nimport React from \"react\";\r\nimport Home from '../../../imagens/home.png';\r\nimport Warehouse from '../../../imagens/armazem.png';\r\nimport {Link } from \"react-router-dom\";\r\n\r\n\r\nexport default class CriarArmazem extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          message: ''\r\n        };\r\n      }\r\n\r\n      onCreateArmazem=()=>{\r\n\r\n        const armazemInfo= JSON.stringify({\r\n            id: this.refs.armazemID.value,\r\n            designcacao: this.refs.designacao.value,\r\n            morada:{\r\n                rua: this.refs.rua.value,\r\n                numeroPorta: this.refs.numPorta.value,\r\n                codigoPostal: this.refs.codPostal.value,\r\n                localidade: this.refs.localidade.value,\r\n                pais: this.refs.localidade.value\r\n            },\r\n            coordenadas: {\r\n                latitude: this.refs.latitude.value,\r\n                longitude: this.refs.longitude.value,\r\n                altitude: this.refs.altitude.value\r\n            }\r\n        });\r\n\r\n        var requestOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n            },\r\n            body: armazemInfo,\r\n            redirect: 'follow'\r\n        };\r\n          \r\n        fetch(\"https://localhost:5001/api/Armazem/\", requestOptions)\r\n            .then(response => response.text())\r\n            .then(result => console.log(result))\r\n            .catch(window.alert(\"Os dados introduzidos não possibilitam a criação de um Armazém! Introduza os dados novamente. \\n\" + \r\n            \"Siga os seguintes formatos:\\n\" +\r\n            \"\\t-ID: 3 caracteres alfa-numéricos;\\n\" +\r\n            \"\\t-Designação: máximo de 50 caracteres;\\n\" +\r\n            \"\\t-Rua: nome da rua;\\n\" +\r\n            \"\\t-Número da Porta: número inteiro;\\n\"+\r\n            \"\\t-Código-Postal: formato português(ex:7854-896);\\n\"+\r\n            \"\\t-Localidade: localidade do Armazém;\\n\" +\r\n            \"\\t-País: país do Armazém;\\n\"+\r\n            \"\\t-Latitude: número decimal entre -90.00 e 90.00;\\n\"+\r\n            \"\\t-Longitude: número decimal entre -180 e 180;\\n\" +\r\n            \"\\t-Latitude: número decimal.\"));\r\n\r\n        \r\n      }\r\n\r\n    render() {\r\n        return (\r\n        <main>\r\n            <div className=\"main-armazem\">   \r\n                <div className=\"card-armazem\">\r\n                    <h1>CRIAR ARMAZEM</h1>\r\n                    <div className=\"textfield-armazem\">\r\n                        <label>ID de Armazém</label>\r\n                        <input type=\"text\" className=\"inputArmazem\" ref=\"armazemID\" maxLength={3} required />\r\n                    </div>\r\n                    <div className=\"textfield-armazem\">\r\n                        <label>Designação</label>\r\n                        <input type=\"text\" className=\"inputArmazem\" ref=\"designacao\" maxLength={50} required/>\r\n                    </div>  \r\n                    <div className=\"textfield-armazem\">\r\n                        <label>Rua</label>\r\n                        <input type=\"text\" className=\"inputArmazem\" ref=\"rua\"/>\r\n                    </div>\r\n                    <div className=\"textfield-armazem\">\r\n                        <label>Numero da Porta</label>\r\n                        <input type=\"number\" className=\"inputArmazem\" ref=\"numPorta\" min={0}/>\r\n                    </div>\r\n                    <div className=\"textfield-armazem\">\r\n                        <label>Código Postal</label>\r\n                        <input type=\"text\" className=\"inputArmazem\" ref=\"codPostal\" pattern='[0-9]{4}-[0-9]{3}'/>\r\n                    </div>\r\n                    <div className=\"textfield-armazem\">\r\n                        <label>Localidade</label>\r\n                        <input type=\"text\" className=\"inputArmazem\" ref=\"localidade\"/>\r\n                    </div>\r\n                    <div className=\"textfield-armazem\">\r\n                        <label>País</label>\r\n                        <input type=\"text\" className=\"inputArmazem\" ref=\"pais\"/>\r\n                    </div>\r\n                    <div className=\"textfield-armazem\">\r\n                        <label>Latitude</label>\r\n                        <input type=\"number\" step=\"0.01\" className=\"inputArmazem\" ref=\"latitude\" min={-90} max={90}/>\r\n                    </div>\r\n                    <div className=\"textfield-armazem\">\r\n                        <label>Longitude</label>\r\n                        <input type=\"number\" step=\"0.01\" className=\"inputArmazem\" ref=\"longitude\" min={-180} max={180}/>\r\n                    </div>\r\n                    <div className=\"textfield-armazem\">\r\n                        <label>Altitude</label>\r\n                        <input type=\"number\" step=\"0.01\" className=\"inputArmazem\" ref=\"altitude\" min={0}/>\r\n                    </div>\r\n                    <button className=\"btn-criar-armazem\" onClick={this.onCreateArmazem}>Criar</button>\r\n                </div>\r\n                <div>\r\n                    <Link to=\"/\">\r\n                    <button className=\"btn-home-armazem\" ><img src={Home} height =\"70\" width=\"70\"/></button>\r\n                    </Link>\r\n                    <Link to=\"/armazem/menu\">\r\n                    <button className=\"btn-armazem\" ><img src={Warehouse} height =\"70\" width=\"70\"/></button>\r\n                    </Link></div>\r\n            </div>\r\n        </main> \r\n        );       \r\n    }\r\n}\r\n\r\n","import './criarEntrega.css';\r\nimport React from \"react\";\r\nimport Home from '../../../imagens/home.png';\r\n\r\nexport default class CriarEntrega extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            message: ''\r\n        };\r\n    }\r\n\r\n    onCreateEntrega=()=>{\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n        const entregaInfo= JSON.stringify({\r\n            IdArmazem: {\r\n                \"value\": this.refs.IdArmazem.value\r\n            },\r\n            DataEntrega: this.refs.DataEntrega.value,\r\n            Peso: this.refs.Peso.value,\r\n            TempoCarregamento: this.refs.TempoCarregamento.value,\r\n            TempoDescarregamento: this.refs.TempoDescarregamento.value\r\n        });\r\n\r\n        var requestOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n            },\r\n            body: entregaInfo,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(\"https://localhost:5001/api/Entrega/\", requestOptions)\r\n            .then(response => response.text())\r\n            .then(result => console.log(result))\r\n            .catch(error => console.log('error', error));\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <main>\r\n            <div className=\"main-entrega\">   \r\n                <div className=\"card-entrega\">\r\n                    <h1>CRIAR ENTREGA</h1>\r\n                    <div className=\"textfield-entrega\">\r\n                        <label>ID de Armazém</label>\r\n                        <input type=\"text\" className=\"inputEntrega\" ref=\"IdArmazem\"/>\r\n                    </div>\r\n                    <div className=\"datefield-entrega\">\r\n                        <label>Data de Entrega</label>\r\n                        <input type=\"date\" className=\"inputEntrega\" ref=\"DataEntrega\"/>\r\n                    </div>\r\n                    <div className=\"textfield-entrega\">\r\n                        <label>Peso</label>\r\n                        <input type=\"number\" step=\"0.01\" className=\"inputEntrega\" ref=\"Peso\" min={0}/>\r\n                    </div>\r\n                    <div className=\"textfield-entrega\">\r\n                        <label>Tempo de Carregamento</label>\r\n                        <input type=\"number\" step=\"0.01\" className=\"inputEntrega\" ref=\"TempoCarregamento\" min={0}/>\r\n                    </div>\r\n                    <div className=\"textfield-entrega\">\r\n                        <label>Tempo de Descarregamento</label>\r\n                        <input type=\"number\" step=\"0.01\" className=\"inputEntrega\" ref=\"TempoDescarregamento\" min={0}/>\r\n                    </div>\r\n                    <button className=\"btn-criar-entrega\" onClick={this.onCreateEntrega}>Criar</button>\r\n                </div>\r\n                <button className=\"btn-home\"><img src={Home} height =\"70\" width=\"70\"/></button>\r\n            </div>\r\n        </main>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n","import './listarEntrega.css';\r\nimport React from \"react\";\r\nimport {useState} from \"react\";\r\n//import fetch from 'node-fetch';\r\n\r\n\r\nconst ListarEntrega = () => {\r\n\r\n    const [idArmazem,setIdArmazem]=useState('');\r\n    const [dataInicial,setDataInicial]=useState('');\r\n    const [dataFinal,setDataFinal]=useState('');\r\n    const [opcao, setOpcao]=useState('todos');\r\n\r\n    const atualizarOpcao = (e) => {\r\n        //let opcaoSelecionada = document.getElementById(\"opcoes-ent\").value;\r\n        let opcaoSelecionada = e.target.value;\r\n        setOpcao(opcaoSelecionada);\r\n        let inputIdArmazem = document.getElementById(\"idArmazemInput\");\r\n        let inputDataInicial = document.getElementById(\"dataInicialInput\");\r\n        let inputDataFinal = document.getElementById(\"dataFinalInput\");\r\n        if(opcaoSelecionada === 'todos') {\r\n            //limparDados();\r\n            inputIdArmazem.setAttribute('readonly', true);\r\n            inputDataInicial.setAttribute('readonly', true);\r\n            inputDataFinal.setAttribute('readonly', true);\r\n        } else if(opcaoSelecionada === 'idArmazem') {\r\n            //limparDados();\r\n            inputIdArmazem.removeAttribute('readonly');\r\n            inputDataInicial.setAttribute('readonly', true);\r\n            inputDataFinal.setAttribute('readonly', true);\r\n        } else {\r\n            //limparDados();\r\n            inputDataInicial.removeAttribute('readonly');\r\n            inputDataFinal.removeAttribute('readonly');\r\n            inputIdArmazem.setAttribute('readonly', true);\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    \r\n\r\n    async function listar() {\r\n        let path;\r\n        if(opcao === 'todos') {\r\n            path = '/';\r\n        } else if(opcao === 'idArmazem') {\r\n            path = '/porIdArmazem?idArmazem=' + idArmazem;\r\n        } else if(opcao === 'datas') {\r\n            path = '/porDatas?data1=' + dataInicial + '&data2=' + dataFinal;\r\n        }\r\n\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            redirect: 'follow'\r\n        };\r\n          \r\n\r\n        const response = await fetch(\"http://localhost:3000/api/Entrega/\" + path, requestOptions)\r\n        const entregas = await response.json();\r\n        \r\n        //no caso de ser necessário apagar a tabela\r\n        const output = document.getElementById(\"output\");\r\n        while (output.rows.length > 1) {\r\n            output.deleteRow(-1);\r\n        }\r\n\r\n        if(opcao === 'datas'){\r\n            \r\n            let row = output.insertRow(-1);\r\n\r\n            inserirCell(row, entregas.dataEntrega);\r\n\r\n            inserirCell(row, entregas.peso);\r\n\r\n            inserirCell(row, entregas.tempoCarregamento);\r\n\r\n            inserirCell(row, entregas.tempoDescarregamento);\r\n\r\n        } else {\r\n\r\n            let myMap = new Map(Object.entries(entregas));\r\n\r\n            for(let niveis = 0; niveis <= myMap.size-1; niveis++){\r\n\r\n                let row = output.insertRow(-1);\r\n\r\n                let dataEntrega = myMap.get('' + niveis).dataEntrega;\r\n                inserirCell(row, dataEntrega);\r\n\r\n                let peso = myMap.get('' + niveis).peso;\r\n                inserirCell(row, peso);\r\n\r\n                let tempoCarregamento = myMap.get('' + niveis).tempoCarregamento;\r\n                inserirCell(row, tempoCarregamento);\r\n\r\n                let tempoDescarregamento = myMap.get('' + niveis).tempoDescarregamento;\r\n                inserirCell(row, tempoDescarregamento);\r\n            }\r\n        }\r\n    }\r\n\r\n    function inserirCell(row, atributo) {\r\n        let cell = row.insertCell(-1);\r\n        cell.className = \"output\";\r\n        cell.innerHTML = atributo;\r\n    }    \r\n\r\n    return (\r\n        <main>\r\n            <div className=\"main-listar-entrega\">\r\n                <div className=\"left-listar-entrega\">\r\n                    <table id=\"output\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th className=\"idArmazemTable\">Id de Armazém</th>\r\n                                <th className=\"dataEntregaTable\">Data de Entrega</th>\r\n                                <th className=\"pesoTable\">Peso</th>\r\n                                <th className=\"tempoCarregamentoTable\">Tempo de Carregamento</th>\r\n                                <th className=\"tempoDescarregamentoTable\">Tempo de Descarregamento</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div className=\"right-listar-entrega\">\r\n                    <div className=\"card-listar-entrega\">\r\n                    <h1>LISTAR ENTREGA</h1>\r\n                    <div className=\"textfield-listar-entrega\">\r\n                        <label>Id de Armazém</label>\r\n                        <input id=\"idArmazemInput\" type=\"text\" className=\"inputEntrega\" onChange={(e=>setIdArmazem(e.target.value))} readOnly/>\r\n                    </div>\r\n                    <div className=\"datefield-listar-entrega\">\r\n                        <label>Data Inicial</label>\r\n                        <input id=\"dataInicialInput\" type=\"date\" className=\"inputEntrega\" onChange={(e=>setDataInicial(e.target.value))} readOnly/>\r\n                    </div>\r\n                    <div className=\"datefield-listar-entrega\">\r\n                        <label>Data Final</label>\r\n                        <input id=\"dataFinalInput\" type=\"date\" className=\"inputEntrega\" onChange={(e=>setDataFinal(e.target.value))} readOnly/>\r\n                    </div>\r\n                    <div className=\"opcoes-entrega\">\r\n                        <label>Opção</label>\r\n                        <select id=\"opcoes-ent\" onChange={atualizarOpcao}>\r\n                            <option value=\"todos\">Todos</option>\r\n                            <option value=\"idArmazem\">Por Id de Armazém</option>\r\n                            <option value=\"datas\">Por Datas</option>\r\n                        </select>\r\n                    </div>\r\n                    <button className=\"btn-listar-ent\" onClick={listar}>LISTAR</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default ListarEntrega;","import './criarCamiao.css';\r\nimport React from \"react\";\r\nimport Home from '../../../imagens/home.png';\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport default class CriarCamiao extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          message: ''\r\n        };\r\n    }\r\n\r\n    onCreateCamiao=()=>{\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n        const camiaoInfo = JSON.stringify({\r\n            nomeCamiao: this.refs.nomeCamiao.value,\r\n            cargaTotalBaterias: this.refs.cargaTotalBaterias.value,\r\n            tara: this.refs.tara.value,\r\n            maximoCarga: this.refs.maximoCarga.value,\r\n            autonomia: this.refs.autonomia.value,\r\n            tempoCarregamento: this.refs.tempoCarregamento.value,\r\n            matriculaCamiao: this.refs.matriculaCamiao.value\r\n        });\r\n\r\n        var requestOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n            },\r\n            body: camiaoInfo,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(\"http://localhost:3000/api/camioes\", requestOptions)\r\n                .then(response => response.text())\r\n                .then(result => console.log(result))\r\n                .catch(err => console.log(err));\r\n    }\r\n\r\n    \r\n        /* const [nomeCamiao,setNomeCamiao] = useState('');\r\n        const [cargaTotalBaterias,setCargaTotalBaterias] = useState('');\r\n        const [tara,setTara] = useState('');\r\n        const [maximoCarga,setMaximoCarga] = useState('');\r\n        const [autonomia,setAutonomia] = useState('');\r\n        const [tempoCarregamento,setTempoCarregamento] = useState('');\r\n        const [matriculaCamiao,setMatriculaCamiao] = useState('');\r\n        \r\n        const [formErrors, setFormErrors] = useState({});\r\n        \r\n\r\n        function criar() {\r\n            const errors = {};\r\n            let dadosValidos = true;\r\n\r\n            if(nomeCamiao.length === 0 || cargaTotalBaterias.length === 0 ||\r\n                tara.length === 0 || maximoCarga.length === 0 || autonomia.length === 0 ||  tempoCarregamento.length === 0 || matriculaCamiao.length === 0) {\r\n                    errors.camposObrigatorios = \"Todos os campos são obrigatórios!\"\r\n                    dadosValidos = false;\r\n            }\r\n            if(tara < 0 || cargaTotalBaterias < 0 || maximoCarga < 0 || autonomia < 0 || tempoCarregamento < 0) {\r\n                errors.valoresNumericos = \"Carga Total das Baterias, Tara, Máximo Carga, Autonomia ou Tempo de Carregamento não podem ser negativos!\"\r\n                dadosValidos = false;\r\n            }\r\n            setFormErrors(errors);\r\n            if(dadosValidos) {\r\n                postAPICamiao();\r\n            }        \r\n        };\r\n\r\n        useEffect(() => {\r\n            \r\n\r\n        }, [formErrors]);\r\n\r\n\r\n        async function postAPICamiao(){\r\n            await \r\n        }*/\r\n    render(){\r\n        return(\r\n            <main>\r\n                <div className=\"main-camiao\">   \r\n                    <div className=\"card-camiao\">\r\n                        <h1>CRIAR CAMIÃO</h1>\r\n                        <div className=\"textfield-camiao\">\r\n                            <label>Nome do Camião</label>\r\n                            <input type=\"text\" className=\"inputCamiao\" ref=\"nomeCamiao\"/>\r\n                        </div>\r\n                        <div className=\"textfield-camiao\">\r\n                            <label>Carga Total das Baterias</label>\r\n                            <input type=\"number\" className=\"inputCamiao\" ref=\"cargaTotalBaterias\"/>\r\n                        </div>  \r\n                        <div className=\"textfield-camiao\">\r\n                            <label>Tara</label>\r\n                            <input type=\"number\" className=\"inputCamiao\" ref=\"tara\"/>\r\n                        </div>\r\n                        <div className=\"textfield-camiao\">\r\n                            <label>Máximo de Carga</label>\r\n                            <input type=\"number\" className=\"inputCamiao\" ref=\"maximoCarga\"/>\r\n                        </div>\r\n                        <div className=\"textfield-camiao\">\r\n                            <label>Autonomia</label>\r\n                            <input type=\"number\" className=\"inputCamiao\" ref=\"autonomia\"/>\r\n                        </div>\r\n                        <div className=\"textfield-camiao\">\r\n                            <label>Tempo de Carregamento</label>\r\n                            <input type=\"number\" className=\"inputCamiao\" ref=\"tempoCarregamento\"/>\r\n                        </div>\r\n                        <div className=\"textfield-camiao\">\r\n                            <label>Matrícula do Camião</label>\r\n                            <input type=\"text\" className=\"inputCamiao\" ref=\"matriculaCamiao\"/>\r\n                        </div>\r\n                        <button className=\"btn-criar\" onClick={this.onCreateCamiao}>Criar</button>\r\n                    </div>\r\n                    <button className=\"btn-home\"><img src={Home} height =\"70\" width=\"70\"/></button>\r\n                </div>\r\n            </main>\r\n        );\r\n    }\r\n}","import './style.css';\r\nimport React from \"react\";\r\nimport Camiao from './camiao.svg';\r\n\r\n\r\nexport default function fazerLogin() {\r\n    return (\r\n\r\n        <body>\r\n            <div class=\"main-login\">\r\n                <div class=\"left-login\">\r\n                    <h1>Welcome to ElectricGo!<br></br></h1>\r\n                    <img src={Camiao} class=\"left-login-image\" alt=\"Camiao animaçao\"></img>\r\n                </div>\r\n                <div class=\"right-login\">\r\n                    <div class=\"card-login\">\r\n                        <h1>LOGIN</h1>\r\n                        <div class=\"textfield-login\">\r\n                            <input type=\"text\" name=\"utilizador\" placeholder=\"Utilizador\"></input>\r\n                        </div>\r\n                        <div class=\"textfield-login\">\r\n                            <input type=\"password\" name=\"senha\" placeholder=\"Senha\"></input>\r\n                        </div>\r\n                        <button class=\"btn-login\">Login</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </body>\r\n    );\r\n}","import './criarPercurso.css';\r\nimport React from \"react\";\r\nimport Home from '../../../imagens/home.png';\r\nimport {useState} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst CriarPercurso = () => {\r\n\r\n    const [armazemPartida,setArmazemPartida]=useState('');\r\n    const [armazemChegada,setArmazemChegada]=useState('');\r\n    const [distancia,setDistancia]=useState('');\r\n    const [duracao,setDuracao]=useState('');\r\n    const [energiaGasta,setEnergiaGasta]=useState('');\r\n    const [tempoExtra,setTempoExtra]=useState('');\r\n\r\n    const [formErrors, setFormErrors] = useState({});\r\n    \r\n\r\n    function criar() {\r\n        const errors = {};\r\n        let dadosValidos = true;\r\n\r\n        if(armazemPartida.length === 0 || armazemChegada.length === 0 ||\r\n            distancia.length === 0 || duracao.length === 0 || energiaGasta.length === 0 ||  tempoExtra.length === 0) {\r\n                errors.camposObrigatorios = \"Todos os campos são obrigatórios!\"\r\n                dadosValidos = false;\r\n        }\r\n        if(distancia < 0 || duracao < 0 || energiaGasta < 0 || tempoExtra < 0) {\r\n            errors.valoresNumericos = \"Distância, Duração, Energia e Tempo Extra não podem ser negativos!\"\r\n            dadosValidos = false;\r\n        }\r\n        setFormErrors(errors);\r\n\r\n        if(dadosValidos) {\r\n            pedidoAPILogistica();\r\n        } \r\n    };\r\n\r\n\r\n    async function pedidoAPILogistica () {\r\n        await fetch('http://localhost:3000/api/percursos/', {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                \"armazemPartida\":armazemPartida,\r\n                \"armazemChegada\":armazemChegada,\r\n                \"distancia\": distancia,\r\n                \"duracao\": duracao,\r\n                \"energiaGasta\": tempoExtra,\r\n                \"tempoExtra\": energiaGasta\r\n            }),\r\n            headers: {\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n            },\r\n            })\r\n            .then((response) => response.json())\r\n            .then((json) => console.log(json))\r\n            .catch(err => window.alert('Não foi possível criar o percurso. Verifique se os IDs dos Armazéns estão corretos e se já não existe nenhum percurso entre esses 2 Armazéns.'));\r\n    }\r\n\r\n    return (\r\n        <main>\r\n            <div className=\"main-percurso\">   \r\n                <div className=\"card-percurso\">\r\n                    <h1>CRIAR PERCURSO</h1>\r\n                    <div className=\"textfield-percurso\">\r\n                        <label>Armazém de Partida</label>\r\n                        <input type=\"text\" className=\"inputPercurso\" onChange={(e=>setArmazemPartida(e.target.value))}/>\r\n                    </div>\r\n                    <div className=\"textfield-percurso\">\r\n                        <label>Armazém de Chegada</label>\r\n                        <input type=\"text\" className=\"inputPercurso\" onChange={(e=>setArmazemChegada(e.target.value))}/> \r\n                    </div>\r\n                    <div className=\"textfield-percurso\">\r\n                        <label>Distância</label>\r\n                        <input type=\"number\" className=\"inputPercurso\" onChange={(e=>setDistancia(e.target.value))}/>\r\n                    </div>\r\n                    <div className=\"textfield-percurso\">\r\n                        <label>Duração</label>\r\n                        <input type=\"number\" className=\"inputPercurso\" onChange={(e=>setDuracao(e.target.value))}/>\r\n                    </div>\r\n                    <div className=\"textfield-percurso\">\r\n                        <label>Energia Gasta</label>\r\n                        <input type=\"number\" className=\"inputPercurso\" onChange={(e=>setEnergiaGasta(e.target.value))}/>\r\n                    </div>\r\n                    <div className=\"textfield-percurso\">\r\n                        <label>Tempo Extra</label>\r\n                        <input type=\"number\" className=\"inputPercurso\" onChange={(e=>setTempoExtra(e.target.value))}/>\r\n                    </div>\r\n                    <div className=\"errors\">\r\n                        <label>{formErrors.camposObrigatorios}</label>\r\n                        <label>{formErrors.valoresNumericos}</label>\r\n                    </div>                    \r\n                    <button className=\"btn-criar\" onClick={criar}>Criar</button>\r\n                </div>\r\n                <Link to=\"/\">\r\n                <button className=\"btn-home\"><img src={Home} height =\"70\" width=\"70\"/></button>\r\n                </Link>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default CriarPercurso;","import './listarPercurso.css';\r\nimport React from \"react\";\r\nimport Home from '../../../imagens/home.png';\r\nimport {useState} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst ListarPercurso = () => {\r\n\r\n    const [armazemPartida,setArmazemPartida]=useState('');\r\n    const [armazemChegada,setArmazemChegada]=useState('');\r\n    const [opcao, setOpcao]=useState('todos');\r\n \r\n\r\n    const atualizarOpcao = (e) => {\r\n        //let opcaoSelecionada = document.getElementById(\"opcoes-perc\").value;\r\n        let opcaoSelecionada = e.target.value;\r\n        setOpcao(opcaoSelecionada);\r\n        let inputArmPartida = document.getElementById(\"armPartidaInput\");\r\n        let inputArmChegada = document.getElementById(\"armChegadaInput\");\r\n        \r\n        if(opcaoSelecionada === 'todos') {\r\n            //limparDados();\r\n            inputArmPartida.setAttribute('readonly', true);\r\n            inputArmChegada.setAttribute('readonly', true);\r\n        } else if(opcaoSelecionada === 'armPartida') {\r\n            //limparDados();\r\n            inputArmPartida.removeAttribute('readonly');\r\n            inputArmChegada.setAttribute('readonly', true);\r\n        } else if(opcaoSelecionada === 'armChegada') {\r\n            //limparDados();\r\n            inputArmPartida.setAttribute('readonly', true);\r\n            inputArmChegada.removeAttribute('readonly');\r\n        } else {\r\n            inputArmPartida.removeAttribute('readonly');\r\n            inputArmChegada.removeAttribute('readonly');\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    \r\n    async function listar() {\r\n        let path;\r\n        if(opcao === 'todos') {\r\n            path = '/todos';\r\n        } else if(opcao === 'armPartida') {\r\n            path = '/porArmazemPartida/' + armazemPartida;\r\n        } else if(opcao === 'armChegada') {\r\n            path = '/porArmazemChegada/' + armazemChegada\r\n        } else if(opcao === 'armPartidaEChegada') {\r\n            path = '/porArmPartidaEChegada/' + armazemPartida + '/' + armazemChegada;\r\n        }\r\n\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            redirect: 'follow'\r\n        };\r\n\r\n        const response = await fetch(\"http://localhost:3000/api/percursos\" + path, requestOptions)\r\n        const percursos = await response.json();\r\n        \r\n        //no caso de ser necessário apagar a tabela\r\n        const output = document.getElementById(\"output\");\r\n        while (output.rows.length > 1) {\r\n            output.deleteRow(-1);\r\n        }\r\n\r\n        if(opcao === 'armPartidaEChegada') { //é necessário visto que é um GET que retorna SEMPRE um único percurso\r\n            let row = output.insertRow(-1);\r\n            inserirCell(row, percursos.armazemPartida);\r\n            inserirCell(row, percursos.armazemChegada);\r\n            inserirCell(row, percursos.distancia);\r\n            inserirCell(row, percursos.duracao);\r\n            inserirCell(row, percursos.energiaGasta);\r\n            inserirCell(row, percursos.tempoExtra);\r\n        } else {\r\n            let myMap = new Map(Object.entries(percursos));\r\n\r\n            for (let niveis = 0; niveis <= myMap.size-1; niveis++) {\r\n                let row = output.insertRow(-1);\r\n                let armazemPartida = myMap.get('' + niveis).armazemPartida;\r\n                inserirCell(row, armazemPartida);\r\n                let armazemChegada = myMap.get('' + niveis).armazemChegada;\r\n                inserirCell(row, armazemChegada);\r\n                let distancia = myMap.get('' + niveis).distancia;\r\n                inserirCell(row, distancia);\r\n                let duracao = myMap.get('' + niveis).duracao;\r\n                inserirCell(row, duracao);\r\n                let energiaGasta = myMap.get('' + niveis).energiaGasta;\r\n                inserirCell(row, energiaGasta);\r\n                let tempoExtra = myMap.get('' + niveis).tempoExtra;\r\n                inserirCell(row, tempoExtra);\r\n            }\r\n        }\r\n    }\r\n\r\n    function inserirCell(row, atributo) {\r\n        let cell = row.insertCell(-1);\r\n        cell.className = \"output\";\r\n        cell.innerHTML = atributo;\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <main>\r\n            <div className=\"main-listar-percurso\">\r\n                <div className=\"left-listar-percurso\">\r\n                    <table id=\"output\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th className=\"armPartidaTable\">Armazém de Partida</th>\r\n                                <th className=\"armChegadaTable\">Armazém de Chegada</th>\r\n                                <th className=\"distanciaTable\">Distância</th>\r\n                                <th className=\"duracaoTable\">Duração</th>\r\n                                <th className=\"energiaGastaTable\">Energia Gasta</th>\r\n                                <th className=\"tempoExtraTable\">Tempo Extra</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div className=\"right-listar-percurso\">\r\n                    <div className=\"card-listar-percurso\">\r\n                        <h1>LISTAR PERCURSO</h1>\r\n                        <div className=\"textfield-listar-percurso\">\r\n                            <label>Armazém de Partida</label>\r\n                            <input id=\"armPartidaInput\" type=\"text\" className=\"inputPercurso\" onChange={(e=>setArmazemPartida(e.target.value))} readOnly/>\r\n                        </div>\r\n                        <div className=\"textfield-listar-percurso\">\r\n                            <label>Armazém de Chegada</label>\r\n                            <input id=\"armChegadaInput\" type=\"text\" className=\"inputPercurso\" onChange={(e=>setArmazemChegada(e.target.value))} readOnly/> \r\n                        </div>\r\n                        <div className=\"opcoes-percurso\">\r\n                            <label>Opção</label>\r\n                            <select id=\"opcoes-perc\" onChange={atualizarOpcao}>\r\n                                <option value=\"todos\">Todos</option>\r\n                                <option value=\"armPartida\">Por Armazém de Partida</option>\r\n                                <option value=\"armChegada\">Por Armazém de Chegada</option>\r\n                                <option value=\"armPartidaEChegada\">Por Armazém de Partida e Chegada</option>\r\n                            </select>\r\n                        </div>\r\n                        <button className=\"btn-listar-perc\" onClick={listar}>LISTAR</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default ListarPercurso;","import './listarCamiao.css';\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\n\r\nconst ListarCamiao = () => {\r\n    async function listarCamiao() {\r\n\r\n\r\n        let opcaoSelecionada = document.getElementById(\"opcoes-camiao\").value;\r\n\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            redirect: 'follow'\r\n        };\r\n          \r\n\r\n        const response = await fetch(\"http://localhost:3000/api/camioes/camioesExistentes\", requestOptions)\r\n        const camioes = await response.json();\r\n        \r\n        //no caso de ser necessário apagar a tabela\r\n        const output = document.getElementById(\"output\");\r\n        while (output.rows.length > 1) {\r\n            output.deleteRow(-1);\r\n        }\r\n\r\n        let myMap = new Map(Object.entries(camioes));\r\n\r\n        for (let niveis = 0; niveis < myMap.size; niveis++) {\r\n            var tr = document.createElement('tr');\r\n            tr.innerHTML = '<td>' + myMap.get(''+ niveis).nomeCamiao + '</td>' +\r\n            '<td>' + myMap.get(''+ niveis).cargaTotalBaterias + '</td>' +\r\n            '<td>' + myMap.get(''+ niveis).tara + '</td>' +\r\n            '<td>' + myMap.get(''+ niveis).maximoCarga + '</td>' +\r\n            '<td>' + myMap.get(''+ niveis).autonomia + '</td>' +\r\n            '<td>' + myMap.get(''+ niveis).tempoCarregamento + '</td>' +\r\n            '<td>' + myMap.get(''+ niveis).matriculaCamiao + '</td>';\r\n\r\n            output.appendChild(tr);\r\n\r\n            /*let nomes = myMap.get('' + niveis).nomeCamiao;\r\n            let cargasTotaisBaterias = myMap.get(''+ niveis).cargaTotalBaterias;\r\n            let taras = myMap.get(''+ niveis).tara;\r\n            let maximoCargas = myMap.get(''+ niveis).maximoCarga;\r\n            let autonomias = myMap.get(''+ niveis).autonomia;\r\n            let temposCarregamento = myMap.get(''+ niveis).tempoCarregamento;\r\n            let matriculas = myMap.get('' + niveis).matriculaCamiao;    \r\n\r\n            let row = output.insertRow(-1);\r\n            let cell = row.insertCell(-1);\r\n            cell.className = \"output\";\r\n            cell.innerHTML = nomes;\r\n            cell.innerHTML = cargasTotaisBaterias;\r\n            cell.innerHTML = taras;\r\n            cell.innerHTML = maximoCargas;\r\n            cell.innerHTML = autonomias;\r\n            cell.innerHTML = temposCarregamento;\r\n            cell.innerHTML = matriculas;*/\r\n        }\r\n    }\r\n\r\n    return (\r\n        <main>\r\n            <div className=\"main-listar-camiao\">\r\n                <div className=\"left-listar-camiao\">\r\n                    <table id=\"output\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th className=\"nomeCamiaoTable\">Nome</th>\r\n                                <th className=\"cargaTotalBateriasTable\">Carga Total das Baterias</th>\r\n                                <th className=\"taraTable\">Tara</th>\r\n                                <th className=\"maximoCargaTable\">Máximo de Carga</th>\r\n                                <th className=\"autonomiaTable\">Autonomia</th>\r\n                                <th className=\"tempoCarregamentoTable\">Tempo de Carregamento</th>\r\n                                <th className=\"matriculaCamiaoTable\">Matrícula</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div className=\"right-listar-camiao\">\r\n                    <div className=\"card-listar-camiao\">\r\n                        <h1>LISTAR CAMIÃO</h1>\r\n                        <div className=\"opcoes-camiao\">\r\n                            <label>Opção</label>\r\n                            <select id=\"opcoes-camiao\">\r\n                                <option value=\"todos\">Todos</option>\r\n                            </select>\r\n                        </div>\r\n                        <button className=\"btn-listar-camiao\" onClick={listarCamiao}>LISTAR</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default ListarCamiao;","import './listarArmazem.css';\r\nimport Home from '../../../imagens/home.png';\r\nimport Warehouse from '../../../imagens/armazem.png';\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\nimport {Link } from \"react-router-dom\";\r\n\r\nconst ListarArmazem = () => {\r\n    const [idArmazemInput,setArmazemID]=useState('');\r\n    const [designacaoArmazemInput,setArmazemDesignacao]=useState('');\r\n    const [opcao, setOpcao]=useState('todos');\r\n\r\n    function atualizarOpcao() {\r\n        let opcaoSelecionada = document.getElementById(\"opcoes-armazem\").value;\r\n        setOpcao(opcaoSelecionada);\r\n        let inputIDArmazem = document.getElementById(\"iDArmazemInput\");\r\n        let inputDesignacaoArmazem = document.getElementById(\"designacaoArmazemInput\");\r\n        if(opcaoSelecionada === 'todos') {\r\n            //limparDados();\r\n            inputIDArmazem.setAttribute('readonly', true);\r\n            inputDesignacaoArmazem.setAttribute('readonly', true);\r\n        } else if(opcaoSelecionada === 'porID') {\r\n            //limparDados();\r\n            inputIDArmazem.removeAttribute('readonly');\r\n            inputDesignacaoArmazem.setAttribute('readonly', true);\r\n        } else {\r\n            //limparDados();\r\n            inputDesignacaoArmazem.removeAttribute('readonly');\r\n            inputIDArmazem.setAttribute('readonly', true);\r\n        }\r\n    }\r\n\r\n\r\n    async function listarArmazem() {\r\n        let path;\r\n        if(opcao === 'todos') {\r\n            path = '';\r\n        } else if(opcao === 'porID') {\r\n            path = '/' + idArmazemInput;\r\n        } else if(opcao === 'porDesignacao') {\r\n            path = '/porDesignacao?designacao=' + designacaoArmazemInput\r\n        }\r\n        \r\n\r\n        var requestOptions = {\r\n            method: 'GET',\r\n            redirect: 'follow'\r\n        };\r\n\r\n        \r\n        const response = await fetch(\"https://localhost:5001/api/Armazem\" + path, requestOptions)\r\n\r\n        if(response.status==200) {\r\n            const armazens = await response.json();\r\n\r\n                //no caso de ser necessário apagar a tabela\r\n                const output = document.getElementById(\"output-armazem\");\r\n                while (output.rows.length > 1) {\r\n                    output.deleteRow(-1);\r\n                }\r\n\r\n                let myMap = new Map(Object.entries(armazens));\r\n                console.log(myMap);\r\n                \r\n\r\n                if(opcao === 'todos') {\r\n                    for (let niveis = 0; niveis < myMap.size; niveis++) {\r\n                        var tr = document.createElement('tr');\r\n                        tr.innerHTML = '<td>' + myMap.get(''+ niveis).id + '</td>' +\r\n                        '<td>' + myMap.get(''+ niveis).designcacao + '</td>' +\r\n                        '<td>' + myMap.get(''+ niveis).morada.rua + '</td>' +\r\n                        '<td>' + myMap.get(''+ niveis).morada.numeroPorta + '</td>' +\r\n                        '<td>' + myMap.get(''+ niveis).morada.codigoPostal + '</td>' +\r\n                        '<td>' + myMap.get(''+ niveis).morada.localidade + '</td>' +\r\n                        '<td>' + myMap.get(''+ niveis).morada.pais + '</td>' +\r\n                        '<td>' + myMap.get(''+ niveis).coordenadas.latitude + '</td>' +\r\n                        '<td>' + myMap.get(''+ niveis).coordenadas.longitude + '</td>' +\r\n                        '<td>' + myMap.get(''+ niveis).coordenadas.altitude + '</td>'\r\n                        ;\r\n\r\n                        output.appendChild(tr);\r\n                    }  \r\n                } else {\r\n                    var tr = document.createElement('tr');\r\n                        tr.innerHTML = '<td>' + myMap.get('id') + '</td>' +\r\n                        '<td>' + myMap.get('designcacao') + '</td>' +\r\n                        '<td>' + myMap.get('morada').rua + '</td>' +\r\n                        '<td>' + myMap.get('morada').numeroPorta + '</td>' +\r\n                        '<td>' + myMap.get('morada').codigoPostal + '</td>' +\r\n                        '<td>' + myMap.get('morada').localidade + '</td>' +\r\n                        '<td>' + myMap.get('morada').pais + '</td>' +\r\n                        '<td>' + myMap.get('coordenadas').latitude + '</td>' +\r\n                        '<td>' + myMap.get('coordenadas').longitude + '</td>' +\r\n                        '<td>' + myMap.get('coordenadas').altitude + '</td>'\r\n                        ;\r\n\r\n                        output.appendChild(tr);\r\n                }\r\n        }else{\r\n            window.alert(\"Ocorreu um erro ao encontrar o Armazém! Por favor tente novamente.\");\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <main>\r\n            <div className=\"main-listar-armazem\">\r\n                <div className=\"left-listar-armazem\">\r\n                    <table id=\"output-armazem\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th className=\"idArmazem\">ID do Armazem</th>\r\n                                <th className=\"designacaoArmazem\">Designação</th>\r\n                                <th className=\"ruaArmazem\">Rua</th>\r\n                                <th className=\"numeroPortaArmazem\">Numero da Porta</th>\r\n                                <th className=\"codigoPostalArmazem\">Código-Postal</th>\r\n                                <th className=\"localidadeArmazem\">Localidade</th>\r\n                                <th className=\"paisArmazem\">Pais</th>\r\n                                <th className=\"latitudeArmazem\">Latitude</th>\r\n                                <th className=\"longitudeArmazem\">Longitude</th>\r\n                                <th className=\"altitudeArmazem\">Altitude</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div className=\"right-listar-armazem\">\r\n                    <div className=\"card-listar-armazem\">\r\n                        <h1>LISTAR ARMAZEM</h1>\r\n                        <div className=\"textfield-listar-armazem\">\r\n                            <label>ID do Armazém</label>\r\n                            <input id=\"iDArmazemInput\" type=\"text\" className=\"inputArmazem\" onChange={(e=>setArmazemID(e.target.value))} readOnly/>\r\n                        </div>\r\n                        <div className=\"textfield-listar-armazem\">\r\n                            <label>Designacao do Armazém</label>\r\n                            <input id=\"designacaoArmazemInput\" type=\"text\" className=\"inputArmazem\" onChange={(e=>setArmazemDesignacao(e.target.value))} readOnly/> \r\n                        </div>\r\n                        <div className=\"opcoes-armazem\">\r\n                            <label>Opção</label>\r\n                            <select id=\"opcoes-armazem\" onChange={atualizarOpcao}>\r\n                                <option value=\"todos\">Todos</option>\r\n                                <option value=\"porID\">ID</option>\r\n                                <option value=\"porDesignacao\">Designação</option>\r\n                            </select>\r\n                        </div>\r\n                        <button className=\"btn-listar-armazem\" onClick={listarArmazem}>LISTAR</button>\r\n                    </div>\r\n                    <div className='criar-armazem-buttons'>\r\n                        <Link to=\"/\">\r\n                        <button className=\"btn-home-armazem-listar\" ><img src={Home} height =\"70\" width=\"70\"/></button>\r\n                        </Link>\r\n                        <Link to=\"/armazem/menu\">\r\n                        <button className=\"btn-armazem-listar\" ><img src={Warehouse} height =\"70\" width=\"70\"/></button>\r\n                        </Link></div>\r\n                    </div>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default ListarArmazem;\r\n","import './menuPrincipal.css';\r\nimport React from \"react\";\r\nimport Home from '../../imagens/home.png';\r\nimport {Link } from \"react-router-dom\";\r\n\r\nexport default class MenuPrincipal extends React.Component{\r\n    render() {\r\n        return (\r\n        <main>\r\n            <div className=\"main-menu-armazem\">   \r\n                <div className=\"card-menu-armazem\">\r\n                    <h1>MENU ARMAZEM</h1>\r\n                    <Link to=\"/criarArmazem\">\r\n                        <button className=\"btn-menu-criar-armazem\" >Criar Armazem</button>\r\n                    </Link>\r\n                    <Link to=\"/armazem/listar\">\r\n                        <button className=\"btn-menu-listar-armazem\" >Listar Armazem</button>\r\n                    </Link>\r\n                </div>\r\n                <Link to=\"/\">\r\n                <button className=\"btn-home\" ><img src={Home} height =\"70\" width=\"70\"/></button>\r\n                </Link>\r\n            </div>\r\n        </main> \r\n        );       \r\n    }\r\n}","import './menuGestorLogistica.css';\r\nimport React from \"react\";\r\nimport Home from '../../../imagens/home.png';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class MenuGestorLogistica extends React.Component{\r\n    render() {\r\n        return (\r\n        <main>\r\n            <div className=\"main-menu-gestorLogistica\">   \r\n                <div className=\"card-menu-gestorLogistica\">\r\n                    <h1>MENU DO GESTOR DE LOGÍSTICA</h1>\r\n                        <Link to=\"/percurso/criar\">\r\n                            <button className=\"btn-menu-criar-percurso\" >Criar Percurso</button>\r\n                        </Link>\r\n                        <Link to=\"/percurso/listar\">\r\n                            <button className=\"btn-menu-listar-percurso\" >Listar Percurso</button>\r\n                        </Link>\r\n                </div>\r\n                <Link to=\"/\">\r\n                <button className=\"btn-home\" ><img src={Home} height =\"70\" width=\"70\"/></button>\r\n                </Link>\r\n            </div>\r\n        </main> \r\n        );       \r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Routes, Route } from 'react-router';\r\nimport CriarArmazem from \"./pages/Armazem/CriarArmazem/criarArmazem\"\r\nimport CriarEntrega from \"./pages/Entrega/CriarEntrega/criarEntrega\"\r\nimport ListarEntrega from './pages/Entrega/ListarEntrega/listarEntrega';\r\nimport CriarCamiao from './pages/Camiao/CriarCamiao/criarCamiao';\r\nimport Login from \"./pages/Login/login\"\r\nimport CriarPercurso from './pages/Percurso/CriarPercurso/criarPercurso';\r\nimport ListarPercurso from './pages/Percurso/ListarPercurso/listarPercurso';\r\nimport ListarCamiao from './pages/Camiao/ListarCamiao/listarCamiao';\r\nimport ListarArmazem from './pages/Armazem/ListarArmazem/listarArmazem';\r\nimport ArmazemMenuPrincipal from './pages/Armazem/menuPrincipal';\r\nimport MenuGestorLogistica from './pages/Menu/GestorLogistica/menuGestorLogistica';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Routes>\r\n        <Route path='/' element={<Login/>}/>\r\n        <Route path='/criarEntrega' element={<CriarEntrega/>}/>\r\n        <Route path='/criarArmazem' element={<CriarArmazem/>}/>\r\n        <Route path='/percurso/criar' element={<CriarPercurso/>}/>\r\n        <Route path='/criarCamiao' element={<CriarCamiao/>}/>\r\n        <Route path='/percurso/listar' element={<ListarPercurso/>}/>\r\n        <Route path='/listarEntrega' element={<ListarEntrega/>}/>\r\n        <Route path='/camiao/listar' element={<ListarCamiao/>}/>\r\n        <Route path='/armazem/listar' element={<ListarArmazem/>}/>\r\n        <Route path='/armazem/menu' element={<ArmazemMenuPrincipal/>}/>\r\n        <Route path='/menuGestorLogistica' element={<MenuGestorLogistica/>}/>\r\n      </Routes>\r\n    </BrowserRouter>\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}