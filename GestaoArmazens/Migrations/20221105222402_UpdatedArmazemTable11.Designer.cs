// <auto-generated />
using GestaoArmazens.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DDDNetCore.Migrations
{
    [DbContext(typeof(MySQLContext))]
    [Migration("20221105222402_UpdatedArmazemTable11")]
    partial class UpdatedArmazemTable11
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("GestaoArmazens.Domain.Armazens.Armazem", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Designacao")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Armazens");
                });

            modelBuilder.Entity("GestaoArmazens.Domain.Entregas.Entrega", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("Active")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("DataEntrega")
                        .HasColumnType("longtext");

                    b.Property<string>("IdArmazem")
                        .HasColumnType("longtext");

                    b.Property<double>("Peso")
                        .HasColumnType("double");

                    b.Property<int>("TempoCarregamento")
                        .HasColumnType("int");

                    b.Property<int>("TempoDescarregamento")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Entregas");
                });

            modelBuilder.Entity("GestaoArmazens.Domain.Armazens.Armazem", b =>
                {
                    b.OwnsOne("GestaoArmazens.Domain.Armazens.Coordenadas", "Coordenadas", b1 =>
                        {
                            b1.Property<string>("ArmazemId")
                                .HasColumnType("varchar(255)");

                            b1.Property<double>("Altitude")
                                .HasColumnType("double");

                            b1.Property<double>("Latitude")
                                .HasColumnType("double");

                            b1.Property<double>("Longitude")
                                .HasColumnType("double");

                            b1.HasKey("ArmazemId");

                            b1.ToTable("Armazens");

                            b1.WithOwner()
                                .HasForeignKey("ArmazemId");
                        });

                    b.OwnsOne("GestaoArmazens.Domain.Armazens.Morada", "Morada", b1 =>
                        {
                            b1.Property<string>("ArmazemId")
                                .HasColumnType("varchar(255)");

                            b1.Property<string>("CodigoPostal")
                                .HasColumnType("longtext");

                            b1.Property<string>("Localidade")
                                .HasColumnType("longtext");

                            b1.Property<int>("NumeroPorta")
                                .HasColumnType("int");

                            b1.Property<string>("Pais")
                                .HasColumnType("longtext");

                            b1.Property<string>("Rua")
                                .HasColumnType("longtext");

                            b1.HasKey("ArmazemId");

                            b1.ToTable("Armazens");

                            b1.WithOwner()
                                .HasForeignKey("ArmazemId");
                        });

                    b.Navigation("Coordenadas");

                    b.Navigation("Morada");
                });
#pragma warning restore 612, 618
        }
    }
}
